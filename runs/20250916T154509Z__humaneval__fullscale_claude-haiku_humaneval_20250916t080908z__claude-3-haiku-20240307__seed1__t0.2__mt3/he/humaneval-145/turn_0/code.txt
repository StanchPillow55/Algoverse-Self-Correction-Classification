def order_by_points(nums):
    """
    Write a function which sorts the given list of integers
    in ascending order according to the sum of their digits.
    Note: if there are several items with similar sum of their digits,
    order them based on their index in original list.

    For example:
    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]
    >>> order_by_points([]) == []
    """

    def sum_of_digits(num):
        """Helper function to calculate the sum of digits for a given integer."""
        return sum(int(digit) for digit in str(abs(num)))

    # Create a list of tuples containing the original index, sum of digits, and original value
    indexed_nums = [(i, sum_of_digits(num), num) for i, num in enumerate(nums)]

    # Sort the list of tuples based on the sum of digits, and if the sums are equal, sort based on the original index
    sorted_nums = sorted(indexed_nums, key=lambda x: (x[1], x[0]))

    # Extract the original values from the sorted list of tuples
    return [num for _, _, num in sorted_nums]