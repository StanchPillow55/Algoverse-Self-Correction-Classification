def minPath(grid, k):
    n = len(grid)
    min_path = []

    def dfs(i, j, path, path_len):
        if path_len == k:
            if not min_path or path < min_path:
                min_path[:] = path[:]
            return

        for di, dj in [(0, 1), (0, -1), (1, 0), (-1, 0)]:
            ni, nj = i + di, j + dj
            if 0 <= ni < n and 0 <= nj < n:
                path.append(grid[ni][nj])
                dfs(ni, nj, path, path_len + 1)
                path.pop()

    for i in range(n):
        for j in range(n):
            dfs(i, j, [grid[i][j]], 1)

    return min_path