def decode_cyclic(s: str) -> str:
    """
    Takes as input a string encoded with the encode_cyclic function.
    Returns the decoded string.
    """
    # Split the string into groups of three characters
    groups = [s[i:i + 3] for i in range(0, len(s), 3)]
    
    # Reverse the cycling for each group
    decoded_groups = []
    for group in groups:
        if len(group) == 3:
            # Move the last character to the front
            decoded_group = group[-1] + group[:-1]
        else:
            # Leave the group unchanged if it has fewer than 3 characters
            decoded_group = group
        decoded_groups.append(decoded_group)
    
    # Join all the groups to form the decoded string
    return ''.join(decoded_groups)

# Example usage:
encoded_string = encode_cyclic("abcdefg")  # This would be "bcaefg"
decoded_string = decode_cyclic(encoded_string)
print(decoded_string)  # Should print "abcdefg"