def decode_cyclic(s: str) -> str:
    """
    Takes as input a string encoded with the encode_cyclic function.
    Returns the decoded string.
    """
    # Split the string into groups of three characters
    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) + 2) // 3)]
    
    # Reverse the cycling operation
    decoded_groups = []
    for group in groups:
        if len(group) == 3:
            # Move the last character to the front
            decoded_group = group[-1] + group[:-1]
        else:
            # Leave the group unchanged
            decoded_group = group
        decoded_groups.append(decoded_group)
    
    # Join the decoded groups into a single string
    return "".join(decoded_groups)

# Example usage
encoded = encode_cyclic("abcdefg")
decoded = decode_cyclic(encoded)
print(decoded)  # Should output "abcdefg"