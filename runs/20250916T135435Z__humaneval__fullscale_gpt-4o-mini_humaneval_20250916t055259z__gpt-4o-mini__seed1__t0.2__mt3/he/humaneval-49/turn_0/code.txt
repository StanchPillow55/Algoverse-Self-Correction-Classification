def modp(n: int, p: int) -> int:
    """Return 2^n modulo p (be aware of numerics).
    
    >>> modp(3, 5)
    3
    >>> modp(1101, 101)
    2
    >>> modp(0, 101)
    1
    >>> modp(3, 11)
    8
    >>> modp(100, 101)
    1
    """
    # Handle special case where p is 1
    if p == 1:
        return 0
    
    # Handle the case where n is 0
    if n == 0:
        return 1
    
    result = 1
    base = 2 % p  # Start with 2 mod p
    
    while n > 0:
        # If n is odd, multiply the current result by the base
        if n % 2 == 1:
            result = (result * base) % p
        
        # Square the base
        base = (base * base) % p
        
        # Divide n by 2
        n //= 2
    
    return result