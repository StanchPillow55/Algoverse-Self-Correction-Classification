def tri(n):
    """Generate the first n + 1 numbers of the Tribonacci sequence."""
    if n < 0:
        return []
    
    # Initialize the list to hold the sequence
    tribonacci_sequence = [0] * (n + 1)
    
    # Base cases
    if n >= 0:
        tribonacci_sequence[0] = 1  # Assuming tri(0) = 1
    if n >= 1:
        tribonacci_sequence[1] = 3  # tri(1) = 3
    
    # Fill the sequence based on the rules
    for i in range(2, n + 1):
        if i % 2 == 0:  # Even case
            tribonacci_sequence[i] = 1 + (i / 2)
        else:  # Odd case
            # tri(i) = tri(i - 1) + tri(i - 2) + tri(i + 1)
            # We need to calculate tri(i + 1) first
            if i + 1 <= n:  # Ensure we don't go out of bounds
                tribonacci_sequence[i + 1] = 1 + ((i + 1) / 2)
            tribonacci_sequence[i] = tribonacci_sequence[i - 1] + tribonacci_sequence[i - 2] + tribonacci_sequence[i + 1]
    
    return tribonacci_sequence

# Example usage:
print(tri(3))  # Output: [1, 3, 2, 8]