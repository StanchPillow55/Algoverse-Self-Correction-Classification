def unique_digits(x):
    """Given a list of positive integers x, return a sorted list of all 
    elements that haven't any even digit.
    
    Note: Returned list should be sorted in increasing order.
    
    For example:
    >>> unique_digits([15, 33, 1422, 1])
    [1, 15, 33]
    >>> unique_digits([152, 323, 1422, 10])
    []
    """
    # Define a set of even digits for quick lookup
    even_digits = {'0', '2', '4', '6', '8'}
    
    # Initialize an empty list to hold the valid numbers
    result = []
    
    # Iterate over each number in the input list
    for number in x:
        # Convert the number to string to check each digit
        str_number = str(number)
        
        # Check if any digit in the number is even
        if all(digit not in even_digits for digit in str_number):
            # If no even digits are found, add the number to the result list
            result.append(number)
    
    # Sort the result list before returning
    return sorted(result)

# Example usage
print(unique_digits([15, 33, 1422, 1]))  # Output: [1, 15, 33]
print(unique_digits([152, 323, 1422, 10]))  # Output: []