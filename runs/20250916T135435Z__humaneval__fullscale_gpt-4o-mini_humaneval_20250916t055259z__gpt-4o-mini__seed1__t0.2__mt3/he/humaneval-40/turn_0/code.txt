def triples_sum_to_zero(l: list) -> bool:
    """
    triples_sum_to_zero takes a list of integers as an input.
    it returns True if there are three distinct elements in the list that
    sum to zero, and False otherwise.
    """
    n = len(l)
    if n < 3:
        return False  # Not enough elements for a triplet

    l.sort()  # Sort the list to use two-pointer technique

    for i in range(n - 2):  # We need at least three elements
        if i > 0 and l[i] == l[i - 1]:
            continue  # Skip duplicates for the first element

        left, right = i + 1, n - 1  # Two pointers

        while left < right:
            current_sum = l[i] + l[left] + l[right]
            if current_sum == 0:
                return True  # Found a triplet
            elif current_sum < 0:
                left += 1  # We need a larger sum
            else:
                right -= 1  # We need a smaller sum

    return False  # No triplet found