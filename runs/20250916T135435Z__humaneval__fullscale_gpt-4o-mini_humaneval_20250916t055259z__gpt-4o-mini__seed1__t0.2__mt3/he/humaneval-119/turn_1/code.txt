def match_parens(lst):
    s1, s2 = lst[0], lst[1]
    
    # Function to check if a concatenated string is balanced
    def is_balanced(s1, s2):
        balance = 0
        # Check s1 + s2
        for char in s1:
            balance += 1 if char == '(' else -1
            if balance < 0:  # More ')' than '(' at any point
                return False
        for char in s2:
            balance += 1 if char == '(' else -1
            if balance < 0:  # More ')' than '(' at any point
                return False
        return balance == 0  # Must end with balance 0
    
    # Check both concatenation orders
    if is_balanced(s1, s2) or is_balanced(s2, s1):
        return 'Yes'
    else:
        return 'No'

# Example test cases
print(match_parens(['()(', ')']))  # Should return 'Yes'
print(match_parens([')', ')']))     # Should return 'No'