def pluck(arr):
    """
    Given an array representing a branch of a tree that has non-negative integer nodes,
    your task is to pluck one of the nodes and return it.
    The plucked node should be the node with the smallest even value.
    If multiple nodes with the same smallest even value are found return the node that has smallest index.

    The plucked node should be returned in a list, [ smallest_value, its index ],
    If there are no even values or the given array is empty, return [].
    """
    if not arr:  # Check if the array is empty
        return []
    
    smallest_even = float('inf')  # Initialize to a large number
    smallest_index = -1  # Initialize index to -1
    
    for index, value in enumerate(arr):
        if value % 2 == 0:  # Check if the value is even
            if value < smallest_even:  # Check if it's smaller than the current smallest even
                smallest_even = value
                smallest_index = index  # Update the index of the smallest even value
    
    if smallest_index == -1:  # If no even number was found
        return []
    
    return [smallest_even, smallest_index]  # Return the result as a list