def pluck(arr):
    """
    Given an array representing a branch of a tree that has non-negative integer nodes,
    your task is to pluck one of the nodes and return it.
    The plucked node should be the node with the smallest even value.
    If multiple nodes with the same smallest even value are found return the node that has smallest index.

    The plucked node should be returned in a list, [ smallest_value, its index ],
    If there are no even values or the given array is empty, return [].
    """
    
    smallest_even_value = float('inf')  # Initialize to infinity
    smallest_even_index = -1  # Initialize to -1 (indicating not found)

    for index, value in enumerate(arr):
        if value % 2 == 0:  # Check if the number is even
            if value < smallest_even_value:  # Check if it's the smallest even found
                smallest_even_value = value
                smallest_even_index = index

    # Check if we found any even number
    if smallest_even_index != -1:
        return [smallest_even_value, smallest_even_index]
    else:
        return []

# Example test cases
print(pluck([4, 2, 3]))  # Output: [2, 1]
print(pluck([1, 2, 3]))  # Output: [2, 1]
print(pluck([]))         # Output: []
print(pluck([5, 0, 3, 0, 4, 2]))  # Output: [0, 1]