def correct_bracketing(brackets: str) -> bool:
    """ 
    brackets is a string of "(" and ")".
    return True if every opening bracket has a corresponding closing bracket.
    
    >>> correct_bracketing("(")
    False
    >>> correct_bracketing("()")
    True
    >>> correct_bracketing("(()())")
    True
    >>> correct_bracketing(")(()")
    False
    """
    balance = 0  # This will keep track of the balance of brackets
    
    for char in brackets:
        if char == '(':
            balance += 1  # Increment for an opening bracket
        elif char == ')':
            balance -= 1  # Decrement for a closing bracket
            
        # If balance goes negative, we have more closing than opening brackets
        if balance < 0:
            return False
    
    # If balance is zero, all brackets are matched; otherwise, they are not
    return balance == 0