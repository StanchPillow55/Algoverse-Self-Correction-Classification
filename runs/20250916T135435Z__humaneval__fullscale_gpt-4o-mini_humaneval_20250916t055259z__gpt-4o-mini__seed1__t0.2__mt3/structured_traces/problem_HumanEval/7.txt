turn 1
To solve the problem of filtering a list of strings based on whether they contain a specified substring, we can break down the task into a series of logical steps:

1. **Understanding the Input and Output**:
   - The function takes two parameters:
     - `strings`: a list of strings (which can be empty).
     - `substring`: a string that we want to check for within each string in the list.
   - The output should be a new list containing only those strings from the input list that include the specified substring.

2. **Handling Edge Cases**:
   - If the input list `strings` is empty, the output should also be an empty list.
   - If the `substring` is an empty string, we need to decide how to handle it. Typically, every string contains an empty substring, so we would return the entire list of strings in this case.

3. **Iterating Through the List**:
   - We can use a list comprehension to iterate through each string in the `strings` list and check if the `substring` is present in each string using the `in` operator.

4. **Returning the Result**:
   - The result will be a new list that we will return from the function.

Now, let's implement the function based on this reasoning:

```python
from typing import List

def filter_by_substring(strings: List[str], substring: str) -> List[str]:
    """ Filter an input list of strings only for ones that contain given substring
    >>> filter_by_substring([], 'a')
    []
    >>> filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')
    ['abc', 'bacd', 'array']
    """
    # Using list comprehension to filter strings containing the substring
    return [s for s in strings if substring in s]

# Example usage
if __name__ == "__main__":
    print(filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a'))  # Output: ['abc', 'bacd', 'array']
    print(filter_by_substring([], 'a'))  # Output: []
```

### Explanation of the Code:
- We define the function `filter_by_substring` that takes a list of strings and a substring.
- Inside the function, we use a list comprehension to create a new list. The expression `s for s in strings if substring in s` iterates over each string `s` in the `strings` list and includes it in the new list if `substring` is found within `s`.
- Finally, we return the filtered list.

### Testing:
The provided docstring includes examples that can be used to verify the correctness of the function. We can run the examples to ensure that the function behaves as expected.
PASS: All tests passed